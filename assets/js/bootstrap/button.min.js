/*!
  * Bootstrap button.js v4.5.0 (https://getbootstrap.com/)
  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],factory):(global=global||self).Button=factory(global.jQuery)}(this,(function($){"use strict";function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}$=$&&Object.prototype.hasOwnProperty.call($,"default")?$.default:$;var NAME="button",VERSION="4.5.0",DATA_KEY="bs.button",EVENT_KEY=".bs.button",DATA_API_KEY=".data-api",JQUERY_NO_CONFLICT=$.fn[NAME],CLASS_NAME_ACTIVE="active",CLASS_NAME_BUTTON="btn",CLASS_NAME_FOCUS="focus",SELECTOR_DATA_TOGGLE_CARROT='[data-toggle^="button"]',SELECTOR_DATA_TOGGLES='[data-toggle="buttons"]',SELECTOR_DATA_TOGGLE='[data-toggle="button"]',SELECTOR_DATA_TOGGLES_BUTTONS='[data-toggle="buttons"] .btn',SELECTOR_INPUT='input:not([type="hidden"])',SELECTOR_ACTIVE=".active",SELECTOR_BUTTON=".btn",EVENT_CLICK_DATA_API="click.bs.button.data-api",EVENT_FOCUS_BLUR_DATA_API="focus.bs.button.data-api blur.bs.button.data-api",EVENT_LOAD_DATA_API="load.bs.button.data-api",Button=function(){function Button(element){this._element=element}var _proto=Button.prototype;return _proto.toggle=function toggle(){var triggerChangeEvent=!0,addAriaPressed=!0,rootElement=$(this._element).closest(SELECTOR_DATA_TOGGLES)[0];if(rootElement){var input=this._element.querySelector(SELECTOR_INPUT);if(input){if("radio"===input.type)if(input.checked&&this._element.classList.contains("active"))triggerChangeEvent=!1;else{var activeElement=rootElement.querySelector(".active");activeElement&&$(activeElement).removeClass("active")}triggerChangeEvent&&("checkbox"!==input.type&&"radio"!==input.type||(input.checked=!this._element.classList.contains("active")),$(input).trigger("change")),input.focus(),addAriaPressed=!1}}this._element.hasAttribute("disabled")||this._element.classList.contains("disabled")||(addAriaPressed&&this._element.setAttribute("aria-pressed",!this._element.classList.contains("active")),triggerChangeEvent&&$(this._element).toggleClass("active"))},_proto.dispose=function dispose(){$.removeData(this._element,DATA_KEY),this._element=null},Button._jQueryInterface=function _jQueryInterface(config){return this.each((function(){var data=$(this).data(DATA_KEY);data||(data=new Button(this),$(this).data(DATA_KEY,data)),"toggle"===config&&data[config]()}))},_createClass(Button,null,[{key:"VERSION",get:function get(){return"4.5.0"}}]),Button}();return $(document).on(EVENT_CLICK_DATA_API,'[data-toggle^="button"]',(function(event){var button=event.target,initialButton=button;if($(button).hasClass("btn")||(button=$(button).closest(".btn")[0]),!button||button.hasAttribute("disabled")||button.classList.contains("disabled"))event.preventDefault();else{var inputBtn=button.querySelector(SELECTOR_INPUT);if(inputBtn&&(inputBtn.hasAttribute("disabled")||inputBtn.classList.contains("disabled")))return void event.preventDefault();"LABEL"===initialButton.tagName&&inputBtn&&"checkbox"===inputBtn.type&&event.preventDefault(),Button._jQueryInterface.call($(button),"toggle")}})).on(EVENT_FOCUS_BLUR_DATA_API,'[data-toggle^="button"]',(function(event){var button=$(event.target).closest(".btn")[0];$(button).toggleClass("focus",/^focus(in)?$/.test(event.type))})),$(window).on(EVENT_LOAD_DATA_API,(function(){for(var buttons=[].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS)),i=0,len=buttons.length;i<len;i++){var button=buttons[i],input=button.querySelector(SELECTOR_INPUT);input.checked||input.hasAttribute("checked")?button.classList.add("active"):button.classList.remove("active")}for(var _i=0,_len=(buttons=[].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE))).length;_i<_len;_i++){var _button=buttons[_i];"true"===_button.getAttribute("aria-pressed")?_button.classList.add("active"):_button.classList.remove("active")}})),$.fn[NAME]=Button._jQueryInterface,$.fn[NAME].Constructor=Button,$.fn[NAME].noConflict=function(){return $.fn[NAME]=JQUERY_NO_CONFLICT,Button._jQueryInterface},Button}));